#!/bin/sh
#
# Slackware build script for OpenJPEG
# Copyright (C) 2010-2021 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=openjpeg
VERSION=2.3.1
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.?z* || exit 3
cd $SRC
fix_source

# Apply patches
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
cmake -LAH \
      -DCMAKE_C_FLAGS="$SLKCFLAGS" \
      -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DBUILD_CODEC=on \
      -DBUILD_DOC=on \
      -DBUILD_SHARED_LIBS=on \
      -DBUILD_STATIC_LIBS=off \
      -DOPENJPEG_INSTALL_LIB_DIR=lib$LIBDIRSUFFIX \
      -DOPENJPEG_INSTALL_MAN_DIR=man \
      -DOPENJPEG_INSTALL_DOC_DIR=doc/${NAME}-${VERSION} || exit 5

# Build & install
make VERBOSE=1 -j4 || exit 6
make DESTDIR=$PKG install || exit 7

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
( cd $PKG/usr/doc/${NAME}-${VERSION}; mv LICENSE COPYING; mv README.md README )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 -p $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 -p $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 -p $CWD/slack-desc              $SBDIR/slack-desc
install -m 644 -p $CWD/slack-required          $SBDIR/slack-required
install -m 644 -p $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
install -m 644 -p $CWD/${NAME}.SlackBuild      $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

